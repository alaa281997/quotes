/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;


import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

import static org.junit.Assert.*;

public class AppTest {
    @Test
    public void TestQuoteCons() {
        quote quote = new quote(null,"Author","likes","text");
        assertEquals(null, quote.getTags());
        assertEquals("Author", quote.getAuthor());
        assertEquals("likes", quote.getLikes());
        assertEquals("text", quote.getText());
    }
    @Test()
    public void testFunctionality() throws IOException {
        Gson gson = new Gson();
        BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\User\\IdeaProjects\\quotes\\app\\src\\main\\java\\quotes\\quotesData.json"));
        List<quote> quotes = gson.fromJson(reader, new TypeToken<List<quote>>() {}.getType());
        int min =0;
        int max = 137;
        quote quote = quotes.get((int) (Math.random()*(max-min+1)+min));
        int index = 0;
        for (int i = 0; i < quotes.size() ; i++) {
            if(quotes.get(i).getText().equals(quote.getText())){
                index = i;
            }
        }
        assertTrue("true ", index >= 0 && index < 138);
    }
@Test
    public void testAPI() throws IOException {
        URL url = new URL("http://ron-swanson-quotes.herokuapp.com/v2/quotes");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        assertTrue(String.valueOf(true), connection.getResponseCode() == 200);
    }

}
